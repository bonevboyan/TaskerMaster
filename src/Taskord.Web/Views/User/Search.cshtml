@using Taskord.Data.Models.Enums
@using Taskord.Web.Models
@model UserQueryModel


<div class="row justify-content-center">

    @{
        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        var maxPage = Math.Ceiling((double)Model.TotalUsers / UserQueryModel.UsersPerPage);
    }

    <div class="row mb-3">
        <div class="form-group" style="margin-top: 10px; margin-bottom: 10px;">
            <form method="get">
                <input asp-for="SearchTerm" class="form-control" placeholder="Search...">
            </form>
        </div>

        @{
            var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Users.Any();
        }

        <div class="justify-content-end" style="margin-top: 10px; margin-bottom: 10px;">
            <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="User"
               asp-action="Search"
               asp-route-currentPage="@previousPage"
               asp-route-searchTerm="@Model.SearchTerm">

                Previous

            </a>
            <a class="btn btn-primary float-sm-right @(shouldButtonBeDisabled ? "disabled" : string.Empty)" style="justify-content: flex-end"
               asp-controller="User"
               asp-action="Search"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-searchTerm="@Model.SearchTerm">

                Next

            </a>
        </div>
    </div>
</div>


<div class="row justify-content-center">
    @foreach (var user in Model.Users)
    {
        <div class="col-md-4">
            <div class="card mb-6">
                <img class="card-img-top img-user-card" src="@user.ImagePath" onerror="this.onerror=null; this.src='https://freepikpsd.com/file/2019/10/default-profile-picture-png-1-Transparent-Images.png'">
                <div class="card-body text-center">
                    <h5 class="card-title text-center">
                        <a asp-controller="User" asp-action="Profile" asp-route-userId="@user.Id" class="profile">@user.Name</a>
                    </h5>
                    @if (user.RelationshipState == RelationshipState.Accepted)
                    {
                        <a asp-controller="Chats" asp-action="Get" asp-route-teamId="me" asp-route-chatId="@user.Id" class="btn btn-primary">Send Message</a>
                    }
                    else if (user.RelationshipState == RelationshipState.Pending)
                    {
                        <a asp-controller="User" asp-action="Requests" class="btn btn-warning">Pending Request</a>
                    }
                    else
                    {
                        <a class="addFriend btn btn-info" id="@user.Id">Add Friend</a>
                    }
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
<script type="module">
    let addBtns = document.getElementsByClassName('addFriend');
    let withdrawBtns = document.getElementsByClassName('withdrawRequest');

    [...withdrawBtns].forEach(x => {
        x.addEventListener('click' , (event) => {
            withdrawRequest(x.id);
        });

        async function withdrawRequest(userId, teamId) {
            const response = await fetch('/api/me/withdrawFriendRequest', {
                method: 'post',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ UserId: userId})
            });

            if (response.ok) {
                location.reload();
            }
        }
    });

    [...addBtns].forEach(x => {
        x.addEventListener('click' , (event) => {
            sendRequest(x.id);
        });

        async function sendRequest(id) {
            const response = await fetch('/api/me/sendFriendRequest', {
                method: 'post',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ UserId: id})
            });

            if (response.ok) {
                location.reload();
            }
        }
    });
</script>
}