@using Taskord.Data.Models.Enums
@using Taskord.Services.Chats.Models
@model ChatServiceModel

@{
    ViewData["Title"] = "Personal Chats";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model != null)
{
    <div class="col-12 col-lg-7 col-xl-9">
        <div class="py-2 px-4 border-bottom d-none d-lg-block">
            <div class="d-flex align-items-center py-1">
                <div class="flex-grow-1 pl-3">
                    <strong>@Model.Name</strong>
                    <div class="text-muted small"><em>@(Model.ChatType == ChatType.Personal ? "Personal chat" : "Team chat")</em></div>
                </div>
                @if(Model.ChatType != ChatType.Personal)
                {
                    @if (Model.IsAdmin)
                    {
                        @if (Model.ChatType == ChatType.Team)
                        {
                            <div>
                                <a asp-controller="Teams" asp-action="ManageChatMembers" asp-route-teamId="@Model.TeamId" asp-route-chatId="@Model.Id" class="btn btn-primary mr-1 px-3 manageMembersBtn">Manage Chat Members</a>
                            </div>
                        }
                        <div>
                            <a asp-controller="Teams" asp-action="ManageMemberRoles" asp-route-teamId="@Model.TeamId" class="btn btn-primary mr-1 px-3 manageMembersBtn">Manage Member Roles</a>
                        </div>

                    }
                    <div>
                        <a asp-controller="Teams" asp-action="InviteMembers" asp-route-teamId="@Model.TeamId" class="btn btn-primary mr-1 px-3 manageMembersBtn">Invite Members</a>
                    </div>
                }
            </div>
        </div>

        <div class="position-relative">
            <div class="chat-messages p-4">
                @if (Model.Messages.Count() == 0)
                {
                    <h3 class="text-center">You are now connected</h3>
                    <button id="helloBtn" class="btn btn-primary btn-lg">Say "Hello"</button>
                }
                else
                {
                    @if (Model.LastReadMessageId == Model.Messages.LastOrDefault()?.Id)
                    {
                        @foreach (var message in Model.Messages)
                        {
                            <div class="@(message.IsOwn ? "chat-message-right" : "chat-message-left") pb-4">
                                <div>
                                    <img src="@message.Sender.ImagePath" onerror="this.onerror=null; this.src='https://freepikpsd.com/file/2019/10/default-profile-picture-png-1-Transparent-Images.png'" class="rounded-circle mr-1 img-user-chat">

                                    <div class="text-muted small text-nowrap mt-2">@message.DateTime</div>
                                </div>
                                <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                                    <div class="font-weight-bold mb-1">@message.Sender.Username</div>
                                    @message.Content
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        @foreach (var message in Model.Messages)
                        {
                            <div class="@(message.IsOwn ? "chat-message-right" : "chat-message-left") pb-4">
                                <div>
                                    <img src="@message.Sender.ImagePath" onerror="this.src='https://freepikpsd.com/file/2019/10/default-profile-picture-png-1-Transparent-Images.png'" class="rounded-circle mr-1" width="40" height="40">
                                    <div class="text-muted small text-nowrap mt-2">@message.DateTime</div>
                                </div>
                                <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                                    <div class="font-weight-bold mb-1">@message.Sender.Username</div>
                                    @message.Content
                                </div>
                            </div>

                            @if (message.Id == Model.LastReadMessageId)
                            {
                                <span></span>
                                <div class="divider">
                                    <span>New Messages</span>
                                </div>
                                <hr class="section-title-hr">
                                <span></span>
                            }
                        }
                    }
                }

            </div>
        </div>

        <div class="flex-grow-0 py-3 px-4 border-top">
            <div class="input-group">
                <input id="inputField" type="text" class="form-control" placeholder="Type your message">
                <button id="sendBtn" class="btn btn-primary">Send</button>
            </div>
        </div>
    </div>

    @section Scripts {
<script>
    const element = document.querySelector('.chat-messages');
    element.scrollTop = element.scrollHeight;

    document.getElementById('inputField').addEventListener("keyup", (event) => {
        if (event.keyCode === 13) {
            document.getElementById("sendBtn").click();
        }
    });

    document.getElementById('sendBtn').addEventListener('click' , (event) => {
        let value = document.getElementById('inputField').value;
        sendMessage(value);
    });

    document.getElementById('helloBtn').addEventListener('click' , (event) => {
        sendMessage('Hello!');
    });

    async function sendMessage(value) {
        if (value == '') {
            return;
        }

        const response = await fetch('/api/chats/sendMessage', {
            method: 'post',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ ChatId: '@Model.Id', Content: value })
        });

        if (response.ok) {
            location.reload();
        }
    }
</script>
    }

    @section Sidebar {
        @if(Model.ChatType == ChatType.Personal){
            @await Component.InvokeAsync("Friends", new { chatId = Model.Id} )
        }else{
            @await Component.InvokeAsync("Chats", new { teamId = Model.TeamId, chatId = Model.Id} )
        }
    }
}
else
{
    <a asp-controller="User" asp-action="Requests" class="btn btn-primary btn-lg btn-block">No chats found! Check out your friend requests</a>
}